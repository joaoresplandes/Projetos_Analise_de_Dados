# -*- coding: utf-8 -*-
"""DeployProjetoAirbnb.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1vWuX-kudZIW1NbQBrSyudL2XlgxI4QZD
"""

import pandas as pd
import streamlit as st
import joblib

# Separando as features do dataframe em categorias para melhor serem trabalhadas
# categorias numéricas
x_numericos = {'latitude': 0, 'longitude': 0, 'accommodates': 0, 'bathrooms': 0, 'bedrooms': 0, 'beds': 0, 'extra_people': 0,
               'minimum_nights': 0, 'ano': 0, 'mes': 0, 'n_amenities': 0, 'host_listings_count': 0}
# categorias de True ou False
x_tf = {'host_is_superhost': 0, 'instant_bookable': 0}

# categorias com se tem listas de tópicos
x_listas = {'property_type': ['Apartment', 'Bed and breakfast', 'Condominium', 'Guest suite', 'Guesthouse', 'Hostel', 'House', 'Loft', 'Outros', 'Serviced apartment'],
            'room_type': ['Entire home/apt', 'Hotel room', 'Private room', 'Shared room'],
            'cancelation_policy': ['flexible', 'moderate', 'strict', 'strict_14_with_grace_period']
            }

dicionario = {}
for item in x_listas:
    for valor in x_listas[item]:
        dicionario[f'{item}_{valor}'] = 0
        
# criando os botoes para valores numéricos
for item in x_numericos:
    if item == 'latitude' or item == 'longitude':
        valor = st.number_input(f'{item}', step = 0.00001, value = 0.0, format = '%.5f')
    elif item == 'extra_people':
        valor = st.number_input(f'{item}', step = 0.01, value = 0.0)
    else:
        valor = st.number_input(f'{item}', step = 1, value = 0)
    x_numericos[item] = valor
    
# criando botoes para valores de TRUE e FALSE
for item in x_tf:
    valor = st.selectbox(f'{item}', ('Sim', 'Não'))
    if valor == 'Sim':
        x_tf[item] = 1
    else:
        x_tf[item] = 0
        
# Criando botoes onde se terá uma lista com as categorias
for item in x_listas:
    valor = st.selectbox(f'{item}', x_listas[item])
    dicionario[f'{item}_{valor}'] = 1
    
botao = st.button('Prever Valor do Imóvel')
if botao:
    dicionario.update(x_numericos) # junta o x_numericos ao dicionario onde já tem o x_listas
    dicionario.update(x_tf) # junta o x_tf ao dicionario onde já tem o x_listas e x_numericos
    x_valores = pd.DataFrame(dicionaro, index = [0]) # transforma o dicionario em um DF com indice 0
    modelo = joblib.load('modelo.joiblib') # carrega o modelo de ML com extensão joblib ao deploy
    preco = modelo.predict(x_valores) # realiza a predição no modelo com o DF de x_valores
    st.write(preco[0]) # retorna o valor predito pelo modelo